java
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.filter.DelegatingFilterProxy;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.context.annotation.Bean;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewResolversRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

@SpringBootApplication
@EnableWebMvc
public class Application implements WebMvcConfigurer {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @Bean
    public DelegatingFilterProxy authenticateFilter() {
        return new DelegatingFilterProxy("authenticateFilter");
    }

    @Bean
    public FilterRegistrationBean<AuthenticateFilter> authenticateFilterRegistration() {
        FilterRegistrationBean<AuthenticateFilter> registration = new FilterRegistrationBean<>();
        registration.setFilter(new AuthenticateFilter());
        registration.addUrlPatterns("/*");
        return registration;
    }

    @Bean
    public ServletRegistrationBean<AnvilWebServlet> anvilWebServlet() {
        ServletRegistrationBean<AnvilWebServlet> registration = new ServletRegistrationBean<>(new AnvilWebServlet(), "/AnvilWebServlet");
        registration.setLoadOnStartup(0);
        return registration;
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/**").addResourceLocations("classpath:/static/");
    }

    @Override
    public void configureViewResolvers(ViewResolversRegistry registry) {
        // Configure view resolvers if needed
    }
}
